mongo-endpoint = "mongodb://localhost:27017"
mongo-endpoint = ${?MONGO_ENDPOINT}

akka.persistence {
  journal.plugin = "akka-contrib-mongodb-persistence-journal"
  snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"
}
akka.contrib.persistence {
  mongodb.mongo.mongouri = ${mongo-endpoint}"/bank-settings"
}

akka {
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

akka {
  actor {
    provider = "cluster"
    serialize-messages = on
    allow-java-serialization = on
    serializers {
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "ru.neoflex.example.akka.BankAlertSerializable" = kryo
    }
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2552
    }
  }

  cluster {
    seed-nodes = [
      "akka://CreditHistoryProcessor@127.0.0.1:2551",
      "akka://CreditHistoryProcessor@127.0.0.1:2552"]

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

    kafka.consumer {
      kafka-clients {
        bootstrap.servers = "localhost:9092"
        group.id = "akka-stateful-streaming-demo"
      }
    }
}
